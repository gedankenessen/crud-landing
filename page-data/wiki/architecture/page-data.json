{"componentChunkName":"component---src-templates-wiki-entry-jsx","path":"/wiki/architecture","result":{"data":{"markdownRemark":{"html":"<h2 id=\"stack\">Stack</h2>\n<p>crud is written in <a href=\"https://clojure.org/\">Clojure</a>, a functional and dynamically typed language. It was choosen because of its philosophy around data manipulation (highlights: dynamic typing, simple data structures, nil-pruning) and its great developer experience.</p>\n<br/>\n<p>To persist the data crud connects to a MongoDB. Its hands-off approach to the structuring of data made it a great fit with what crud is trying to provide.\nBesides MongoDB, there is also a <a href=\"https://github.com/gedankenessen/crud/tree/main/src/crud/persistence/local\" title=\"Github\">second implementation</a> of the persistence layer which uses <a href=\"https://clojure.org/reference/atoms\">Clojure Atoms</a> to store data in-memory.</p>\n<br/>\n<p>Clojure being a JVM hosted language opens up a lot of options when it comes to hosting and http servers. As of right now Clojure's <a href=\"https://github.com/http-kit/http-kit\">http-kit</a> was choosen, as it was packaged with the <a href=\"https://luminusweb.com/\">Luminus</a> framework. Though it makes sense to switch to <a href=\"https://www.eclipse.org/jetty/\">Jetty</a> once performance trumps development velocity in terms of priority.</p>\n<h2 id=\"deployment\">Deployment</h2>\n<p>Currently there are many different ways to <a href=\"/wiki/installation\">deploy crud</a>. With <a href=\"/wiki/installation#docker\">Docker</a> being the recommended way to self-host, as it's the quickest.</p>\n<br/>\n<p>In the future an SQL implementation would be great as it would allow to embed a SQLite, thus providing persistence with improved protability.</p>\n<h2 id=\"contributing\">Contributing</h2>\n<p>If you want to look at the code or have ideas on how to improve crud further feel free to checkout our <a href=\"https://github.com/gedankenessen/crud\">repo</a>.</p>\n<h2 id=\"namespaces\">Namespaces</h2>\n<p>The major namespaces the following:</p>\n<br/>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>crud.logic.core</code></td>\n<td>Business Logic</td>\n</tr>\n<tr>\n<td><code>crud.entrypoint.core</code></td>\n<td>Glue routes, wrappers and logic together</td>\n</tr>\n<tr>\n<td><code>crud.persistence.core</code></td>\n<td>Protocol and implementation for persistence</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<p>Also important is the <code>crud.config</code> namespace which provides a summary of all configurations for easy consumption. The application itself is started in <code>crud.core</code>.</p>\n<h2 id=\"layers\">Layers</h2>\n<p>crud has the usual layers of a Web API:</p>\n<br/>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>entrypoint.core</code></td>\n<td>Glue everything together</td>\n</tr>\n<tr>\n<td><code>entrypoint.wrappers</code></td>\n<td>Setup, parse, reject request/response etc.</td>\n</tr>\n<tr>\n<td><code>entrypoint.routes</code></td>\n<td>Route request to destination</td>\n</tr>\n<tr>\n<td><code>logic.core</code></td>\n<td>Consum request</td>\n</tr>\n<tr>\n<td><code>persistence.protocol</code></td>\n<td>Provide basic functions to access data</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"data-and-errors\">Data and errors</h2>\n<p>To take advantage of Clojure's nil-pruning and the REPL-driven development everything returned by each layer is in form of a <code>[data error]</code> tuple. This both encapsulates the error- and succes-case. If an error occurs <code>data</code> will be <code>nil</code> and a <code>:message</code> key will be present inside of <code>error</code>. If the action was sucessful <code>error</code> will be <code>nil</code>.</p>\n<br/>\n<p><a href=\"https://marlonschlosshauer.de/blog/handling-errors-clojure-api\">This blog post</a> talks more about the <code>[data error]</code> tuple.</p>\n<br/>\n<br/>\n<p><em>Last Edited: 2023.01.09; crud:1.2.0</em></p>","frontmatter":{"slug":"architecture","title":"Architecture","description":""}}},"pageContext":{"id":"27487db5-0632-59c2-a351-7d2da777b12c"}},"staticQueryHashes":["4165905740"]}