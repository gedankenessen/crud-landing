{"componentChunkName":"component---src-templates-wiki-entry-jsx","path":"/wiki/installation","result":{"data":{"markdownRemark":{"html":"<h2 id=\"about\">About</h2>\n<p>crud can be hosted in multiple ways.</p>\n<br/>\n<p>The quickest way to get crud up and running is Docker. Alternatively, you can use Docker Compose if you want to have a MongoDB present.\nLastly, you can also just clone the <a href=\"https://github.com/gedankenessen/crud\">crud repo</a> and run the Clojure code directly.</p>\n<br/>\n<p>Opting for Docker will mean your endpoints are saved in-memory, <strong>therefore lost upon restarts</strong>.</p>\n<h2 id=\"docker\">Docker</h2>\n<p>Using the <a href=\"https://hub.docker.com/r/gedankenessen/crud/tags\">official Docker image</a> is the quickest way to get up and running:</p>\n<pre><code class=\"language-shell\">docker run -p 3004:3004 gedankenessen/crud:1.2.0\n</code></pre>\n<br/>\n<p>You can now access crud via <code>127.0.0.1:3004</code>.</p>\n<br/>\n<p>crud will by default use an in-memory storage solution. You can however tell it to use a MongoDB that you provide. Checkout <a href=\"#customizing\">the customizing</a> section to learn more.</p>\n<h2 id=\"docker-compose\">Docker Compose</h2>\n<p>Using Docker Compose is an all-in-one-solution for crud. Here are the necessary steps:</p>\n<br/>\n<ol>\n<li>Create an empty folder for your crud deployment</li>\n<li>Create a <code>docker-compose.yml</code> and paste the following into it</li>\n</ol>\n<pre><code class=\"language-docker\">version: '3.0'\nservices:\n  mongo:\n    image: 'mongo:6.0'\n    restart: 'always'\n    environment:\n      - \"MONGO_INITDB_ROOT_USERNAME=root\"\n      - \"MONGO_INITDB_ROOT_PASSWORD=example\"\n    ports:\n      - '27017:27017'\n  crud:\n    image: 'gedankenessen/crud:1.2.0'\n    restart: 'always'\n    ports:\n      - '3004:3004'\n</code></pre>\n<ol start=\"3\">\n<li>Open a terminal and navigate to your crud folder</li>\n<li>Run <code>docker-compose up</code></li>\n</ol>\n<br/>\n<p>You should now have two services running, a) a <code>mongo</code> service and b) a <code>crud</code> service. If thats the case crud will be available on <code>127.0.0.1:3004</code></p>\n<h2 id=\"git\">Git</h2>\n<p>Requirements:</p>\n<ul>\n<li>Git</li>\n<li>Java (JDK8)</li>\n<li>Clojure (1.10)</li>\n<li>Leiningen</li>\n<li>MongoDB (v6.0 preferred)</li>\n</ul>\n<br/>\n<p>The following steps should get <code>crud</code> up and running:</p>\n<ol>\n<li>Clone the crud repo: <code>git clone git@github.com:gedankenessen/crud.git</code></li>\n<li>Enter the project: <code>cd crud</code></li>\n<li>Run the project via leiningen: <code>lein run</code></li>\n</ol>\n<br/>\n<p>That should start crud for you on <code>127.0.0.1:3004</code>. Check out <a href=\"#customizing\">the customizing</a> section to correctly configure crud to work with your MongoDB.</p>\n<h2 id=\"customizing\">Customizing</h2>\n<p>You can tweak your crud experience with many options. The most important option is <code>db-type</code> which tells crud if it should use a in-memory solution (default, <code>value:local</code>) or a MongoDB (<code>value:mongo</code>).</p>\n<p>So if you want to use a MongoDB either provide a environment variable <code>CRUD_DB_TYPE</code> with the value <code>mongo</code> or use the <code>--db-type</code> command line argument.</p>\n<p>You can tweak further MongoDB related things such as the port, the desired collection, password etc. If you select MongoDB, crud will assume the default location of <code>localhost:27017</code> with the user <code>root</code> and the password <code>example</code>.</p>\n<br/>\n<p>Here is a table of all the possible options:</p>\n<br/>\n<table>\n<thead>\n<tr>\n<th>Environment Variable</th>\n<th>Command Line Argument</th>\n<th>Default</th>\n<th>Options</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>CRUD_DB_TYPE</code></td>\n<td><code>--db-type</code></td>\n<td><code>local</code></td>\n<td><code>mongo</code></td>\n</tr>\n<tr>\n<td><code>CRUD_MONGO_URL</code></td>\n<td><code>--mongo-url</code></td>\n<td><code>localhost</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_MONGO_PORT</code></td>\n<td><code>--mongo-port</code></td>\n<td><code>27017</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_MONGO_USER</code></td>\n<td><code>--mongo-user</code></td>\n<td><code>root</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_MONGO_PW</code></td>\n<td><code>--mongo-pw</code></td>\n<td><code>example</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_MONGO_DB</code></td>\n<td><code>--mongo-db</code></td>\n<td><code>crud-testing</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_MONGO_SHOULD_AUTH</code></td>\n<td><code>--crud-should-auth</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_MONGO_AUTH_DB</code></td>\n<td><code>--crud-auth-db</code></td>\n<td><code>admin</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_PORT</code></td>\n<td><code>--crud-port</code></td>\n<td><code>3004</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_ENV</code></td>\n<td><code>--crud-env</code></td>\n<td><code>prod</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_TOKEN_SECRET</code></td>\n<td><code>--crud-token-secret</code></td>\n<td><code>secret</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>CRUD_TOKEN_VERSION</code></td>\n<td><code>--crud-token-version</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<br/>\n<p>You can adjust all that by either using environment variables (e.g <a href=\"(https://docs.docker.com/engine/reference/commandline/run/#set-environment-variables--e---env---env-file)\">docker run -- -e</a>, <a href=\"https://docs.docker.com/compose/environment-variables/\">docker-compose</a>) or passing in different command line arguments (e.g <code>lein run</code>).</p>\n<h2 id=\"next\">Whats next</h2>\n<p>With crud setup you can checkout the <a href=\"/wiki/first-steps\">first steps</a> section and make your first queries.</p>\n<br/>\n<br/>\n<p><em>Last Edited: 2023.01.09; crud:1.2.0</em></p>","frontmatter":{"slug":"installation","title":"Installation","description":""}}},"pageContext":{"id":"9ff263d9-efe2-5b72-9cd0-ffffd20fee9e"}},"staticQueryHashes":["4165905740"]}